name: Process input data on the Backend

on:
  push:
    branches:
      - main
    paths:
      - 'gift0/cb.txt'

jobs:
  backend_process_file:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      
    steps:
      - name: Get repository files
        uses: actions/checkout@v4

      - name: Create input text
        run: INPUT_TEXT="$(cat gift0/cb.txt | cut -d '|' -f 1)"; echo "INPUT_TEXT = $INPUT_TEXT"; REPOA_NAME="$(cat gift0/cb.txt | cut -d '|' -f 2)"

      - name: Obtain model response
        run: json_string_var="$(echo '{"contents":[{"parts":[{"text":"'$INPUT_TEXT'"}]}]}' | jq -c)"; model_response=$(curl -X POST 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${{ secrets.API_KEY }}' -H "Content-Type:application/json" -d "$json_string_var"); echo "model_response = $model_response"; echo "$model_response" >> gift0/output_response;

      - name: Commit and push changes
        run: |
          repoOwner=$(echo "${{ github.repository }}" | cut -d '/' -f 1);
          repoOwnerEmail="j622amilah@gmail.com";
          
          git config --global user.email ${repoOwnerEmail};
          git config --global user.name ${repoOwner};
          git pull origin main;
          git checkout main;
          git branch --set-upstream-to origin/main;
          git merge main --ff-only;
          git add -A; 
          git diff-index --quiet HEAD || git commit -m "add files" --allow-empty;
          git push;

  tell_frontend_response_is_done:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: npm install puppeteer; 

      - name: Load webpage using a non-graphical browser
        uses: actions/github-script@v6
        with:
          script: |
            const puppeteer = require('puppeteer');
            try {
              const URL = "https://codesolutions2.github.io/quote_to_chatbot_gifts/gift0/index5.html#";
              const browser = await puppeteer.launch({headless: true});
              const page = await browser.newPage();
              
              page.on('load', () => { console.log('Page loaded successfully'); });
              
              await page.goto(URL);

              await page.evaluate(() => { document.querySelector('#notify_that_response_is_done').click(); });
              
              await page.waitForSelector('#notify_that_response_is_done', {visible: true});
              
              await browser.close();
              
            } catch (error) {
              console.log('error: ', error);
            }
